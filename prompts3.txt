You are working on an existing Laravel project. The database schema already exists and migrations/models/controllers/routes/views are partially implemented. Your job is to **improve and complete** the existing module as per the following requirements â€” do NOT rewrite the entire structure, only enhance current code where needed.


Module 3: Customer Groups and Customers Management
    -- database columns: 
        1. 'customers' table: 
            id, facility_name, client_name, contact_name, email, contact_no, company_name, gstin, pan, gst_treatment, private_details, billing_address, billing_country, billing_state, billing_city, billing_zip, shipping_address, shipping_country, shipping_state, shipping_city, shipping_zip, status, 

        2. 'customer_groups' table: 
            id, name, status

        3. 'customer_group_members' table: 
            id, customer_group_id, customer_id

    Task 1: 
    -- http://127.0.0.1:8000/customer-groups
        -- display no of customer groups in card view, active groups, inactive groups, etc.
        -- display list of customer groups table with columns: sr. no., group name, customers count, created date, status, action (view, edit, delete) 
        -- there should be a button for creating new customer group (http://127.0.0.1:8000/create-customer-groups) with this link 
        -- there should be option for multi select delete and multi select status changing 
        -- add links for view (http://127.0.0.1:8000/view-customer-groups/{group_id}), edit(http://127.0.0.1:8000/edit-customer-groups/{group_id}), delete(http://127.0.0.1:8000/delete-customer-groups/{group_id})

    Task 2: 
    -- delete(http://127.0.0.1:8000/delete-customer-groups/{group_id}) 
        -- after clicking on delete button that group will be delete 
        -- handle errors if any occurred 
    
    Task 3: 
    -- edit(http://127.0.0.1:8000/edit-customer-groups/{group_id}), 
        -- after clicking on update button another page will be open where we can update group name only 
        -- after update redirect to http://127.0.0.1:8000/customer-groups 
        -- handle errors if any occurred
        -- there is back button for go to back page             

    Task 4: view (http://127.0.0.1:8000/view-customer-groups/{group_id}) 
        -- display total customers in that group, active customers, inactive customers, etc.
        -- after clicking view button a detailed page will be open where a table will be displayed with customers details for that selected customers group 
        -- there are buttons for managing customers in that group such as add new customer, add multiple customers, delete multiple customers, change status of multiple customers
        -- after clicking on add new customer button a form will be open where we can add new customer in that group
        -- display customers list with columns: client name, contact name, email, contact no, gstin, pan, status, action(view, update, delete) 
        -- there should be action column where we can take actions as view(http://127.0.0.1:8000/customer-detail/{id}), update(http://127.0.0.1:8000/customers/edit/{id}/{group_id}), delete(http://127.0.0.1:8000/customers/delete/{id})
        -- there is back button for go to back page             

        Sub Task 1: view(http://127.0.0.1:8000/customer-detail/{id})
            -- display all the information about selected customer with their personal information, address information, and orders, etc. 
            -- there is back button for go to back page           
        
        Sub Task 2: update(http://127.0.0.1:8000/customers/edit/{id}/{group_id}) 
            -- after clicking on update button a form will be open where we can update that customer information 
            -- after update redirect to (http://127.0.0.1:8000/view-customer-groups/{group_id}) 
            -- handle errors if any occurred
            -- there is back button for go to back page
        
        Sub Task 3: delete(http://127.0.0.1:8000/customers/delete/{id})
            -- after clicking on delete button that customer will be delete from that group 
            -- handle errors if any occurred 
            -- after delete redirect to (http://127.0.0.1:8000/view-customer-groups/{group_id})  

        Sub Task 4: add new customer (http://127.0.0.1:8000/customer-create/{group_id})
            -- there should be a form to add new customer in that group 
            -- after submit redirect to (http://127.0.0.1:8000/view-customer-groups/{group_id})  
            -- handle errors if any occurred
            -- there is back button for go to back page
        
        Sub Task 5: add multiple customers 
            -- when click on button there should be popup form will be display to upload excel file with customer details 
            -- after submit redirect to (http://127.0.0.1:8000/view-customer-groups/{group_id}) 
            -- handle errors if any occurred (show with notification) 

        Sub Task 6: delete multiple customers 
            -- after selecting multiple customers and clicking on delete button those customers will be deleted from that group 
            -- handle errors if any occurred 
            -- after delete redirect to (http://127.0.0.1:8000/view-customer-groups/{group_id}) 
        
        Sub Task 7: change status of multiple customers 
            -- after selecting multiple customers and clicking on change status button those customers status will be changed from that group 
            -- handle errors if any occurred
            -- after changing status redirect to (http://127.0.0.1:8000/view-customer-groups/{group_id}) 
        


    

