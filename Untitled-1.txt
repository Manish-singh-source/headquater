

check above full document and correct it also improve for following things:
i will be using following tech stack:

create a HLD for cake shop management system with following tech stack:
backend laravel 11 + mysql, 
Cache/Queues: Redis, 
Storage: AWS S3, 
CI/CD: GitHub Actions, 
hosting: hostinger, 
payment integration: razorpay, 
messages: twilio, 
Push notification: FCM / APNs - for mobile apps,
Notifications: laravel web push notifications, 
Email: google smtp, 
search: meilisearch, 
Analytics: google analytics,


following are the improvements you need to do in above document: 

firstly my flow will be like this:

Module 1: Admin Management 

1. Admin Login/Logout 
    -- admin can login/logout from the system
    -- admin can reset password using email otp
    -- admin can change password from profile settings 
    
2. Admin Profile Management
    -- admin can view and update profile information
    -- admin can upload profile picture and store it in AWS S3
    -- admin can view activity logs (login/logout, profile updates, password changes) with timestamps

3. Admin Roles and Permissions
    -- implement role-based access control (RBAC) for admin users 
    -- create roles such as Super Admin, Manager, Editor with different permissions
    -- assign roles to admin users and manage permissions for each role 

Module 2: Category Management
1. Category CRUD Operations 
    -- create, read, update, delete categories
    -- categories should have fields: id, name, description, parent_id (for sub-categories), status (active/inactive)
    -- implement soft delete for categories
    -- validate category data before saving to database

2. Category Hierarchy
    -- implement nested categories with parent-child relationships
    -- display categories in a tree structure in the admin panel
    -- allow filtering products based on categories and sub-categories

Module 3: 














